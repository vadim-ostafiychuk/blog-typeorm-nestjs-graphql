# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
}

type CommentEntity {
  id: Int!
  content: String!
  authorId: Int!
  postId: Int!
}

type PostEntity {
  id: Int!
  title: String!
  description: String!
  authorId: Float!
  comments(options: FindCommentOptionsInput): [CommentEntity!]!
  author: UserEntity!
}

input FindCommentOptionsInput {
  sort: SortSchema
}

input SortSchema {
  field: String!
  type: String!
}

type PostsAndCountSchema {
  posts: [PostEntity!]!
  count: Int!
}

type AuthResponseEntity {
  jwt: String!
  user: UserEntity!
}

type Query {
  post(id: Int!): PostEntity!
  postsAndCount(options: FindPostOptionsInput!): PostsAndCountSchema!
  postsAndCountWithComments(options: FindPostOptionsInput!): PostsAndCountSchema!
  me: UserEntity!
}

input FindPostOptionsInput {
  skip: Int
  take: Int
  authorId: Int
  sort: SortSchema
}

type Mutation {
  createPost(data: CreatePostInput!): PostEntity!
  updatePost(id: Int!, data: UpdatePostInput!): PostEntity!
  deletePost(id: Int!): Boolean!
  createComment(data: CreateCommentInput!): CommentEntity!
  login(data: LoginInput!): AuthResponseEntity!
  register(data: RegisterInput!): AuthResponseEntity!
}

input CreatePostInput {
  title: String!
  description: String!
  authorId: Int!
}

input UpdatePostInput {
  title: String
  description: String
  authorId: Int
}

input CreateCommentInput {
  content: String!
  postId: Int!
  authorId: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}